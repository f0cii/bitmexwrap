// Code generated by go-swagger; DO NOT EDIT.

package leaderboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/frankrap/bitmexwrap/bitmex/models"
)

// LeaderboardGetNameReader is a Reader for the LeaderboardGetName structure.
type LeaderboardGetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LeaderboardGetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLeaderboardGetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewLeaderboardGetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewLeaderboardGetNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewLeaderboardGetNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLeaderboardGetNameOK creates a LeaderboardGetNameOK with default headers values
func NewLeaderboardGetNameOK() *LeaderboardGetNameOK {
	return &LeaderboardGetNameOK{}
}

/*LeaderboardGetNameOK handles this case with default header values.

Request was successful
*/
type LeaderboardGetNameOK struct {
	Payload *LeaderboardGetNameOKBody
}

func (o *LeaderboardGetNameOK) Error() string {
	return fmt.Sprintf("[GET /leaderboard/name][%d] leaderboardGetNameOK  %+v", 200, *o.Payload)
}

func (o *LeaderboardGetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LeaderboardGetNameOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeaderboardGetNameBadRequest creates a LeaderboardGetNameBadRequest with default headers values
func NewLeaderboardGetNameBadRequest() *LeaderboardGetNameBadRequest {
	return &LeaderboardGetNameBadRequest{}
}

/*LeaderboardGetNameBadRequest handles this case with default header values.

Parameter Error
*/
type LeaderboardGetNameBadRequest struct {
	Payload *models.Error
}

func (o *LeaderboardGetNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /leaderboard/name][%d] leaderboardGetNameBadRequest  %+v", 400, *o.Payload)
}

func (o *LeaderboardGetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeaderboardGetNameUnauthorized creates a LeaderboardGetNameUnauthorized with default headers values
func NewLeaderboardGetNameUnauthorized() *LeaderboardGetNameUnauthorized {
	return &LeaderboardGetNameUnauthorized{}
}

/*LeaderboardGetNameUnauthorized handles this case with default header values.

Unauthorized
*/
type LeaderboardGetNameUnauthorized struct {
	Payload *models.Error
}

func (o *LeaderboardGetNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /leaderboard/name][%d] leaderboardGetNameUnauthorized  %+v", 401, o.Payload)
}

func (o *LeaderboardGetNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeaderboardGetNameNotFound creates a LeaderboardGetNameNotFound with default headers values
func NewLeaderboardGetNameNotFound() *LeaderboardGetNameNotFound {
	return &LeaderboardGetNameNotFound{}
}

/*LeaderboardGetNameNotFound handles this case with default header values.

Not Found
*/
type LeaderboardGetNameNotFound struct {
	Payload *models.Error
}

func (o *LeaderboardGetNameNotFound) Error() string {
	return fmt.Sprintf("[GET /leaderboard/name][%d] leaderboardGetNameNotFound  %+v", 404, o.Payload)
}

func (o *LeaderboardGetNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LeaderboardGetNameOKBody leaderboard get name o k body
swagger:model LeaderboardGetNameOKBody
*/
type LeaderboardGetNameOKBody struct {

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this leaderboard get name o k body
func (o *LeaderboardGetNameOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LeaderboardGetNameOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LeaderboardGetNameOKBody) UnmarshalBinary(b []byte) error {
	var res LeaderboardGetNameOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
