// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/frankrap/bitmexwrap/bitmex/models"
)

// OrderClosePositionReader is a Reader for the OrderClosePosition structure.
type OrderClosePositionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrderClosePositionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewOrderClosePositionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewOrderClosePositionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewOrderClosePositionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewOrderClosePositionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOrderClosePositionOK creates a OrderClosePositionOK with default headers values
func NewOrderClosePositionOK() *OrderClosePositionOK {
	return &OrderClosePositionOK{}
}

/*OrderClosePositionOK handles this case with default header values.

Request was successful
*/
type OrderClosePositionOK struct {
	Payload *models.Order
}

func (o *OrderClosePositionOK) Error() string {
	return fmt.Sprintf("[POST /order/closePosition][%d] orderClosePositionOK  %+v", 200, *o.Payload)
}

func (o *OrderClosePositionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrderClosePositionBadRequest creates a OrderClosePositionBadRequest with default headers values
func NewOrderClosePositionBadRequest() *OrderClosePositionBadRequest {
	return &OrderClosePositionBadRequest{}
}

/*OrderClosePositionBadRequest handles this case with default header values.

Parameter Error
*/
type OrderClosePositionBadRequest struct {
	Payload *models.Error
}

func (o *OrderClosePositionBadRequest) Error() string {
	return fmt.Sprintf("[POST /order/closePosition][%d] orderClosePositionBadRequest  %+v", 400, *o.Payload)
}

func (o *OrderClosePositionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrderClosePositionUnauthorized creates a OrderClosePositionUnauthorized with default headers values
func NewOrderClosePositionUnauthorized() *OrderClosePositionUnauthorized {
	return &OrderClosePositionUnauthorized{}
}

/*OrderClosePositionUnauthorized handles this case with default header values.

Unauthorized
*/
type OrderClosePositionUnauthorized struct {
	Payload *models.Error
}

func (o *OrderClosePositionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /order/closePosition][%d] orderClosePositionUnauthorized  %+v", 401, o.Payload)
}

func (o *OrderClosePositionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrderClosePositionNotFound creates a OrderClosePositionNotFound with default headers values
func NewOrderClosePositionNotFound() *OrderClosePositionNotFound {
	return &OrderClosePositionNotFound{}
}

/*OrderClosePositionNotFound handles this case with default header values.

Not Found
*/
type OrderClosePositionNotFound struct {
	Payload *models.Error
}

func (o *OrderClosePositionNotFound) Error() string {
	return fmt.Sprintf("[POST /order/closePosition][%d] orderClosePositionNotFound  %+v", 404, o.Payload)
}

func (o *OrderClosePositionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
