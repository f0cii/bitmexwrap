// Code generated by go-swagger; DO NOT EDIT.

package announcement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/frankrap/bitmexwrap/bitmex/models"
)

// AnnouncementGetUrgentReader is a Reader for the AnnouncementGetUrgent structure.
type AnnouncementGetUrgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AnnouncementGetUrgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAnnouncementGetUrgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAnnouncementGetUrgentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAnnouncementGetUrgentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAnnouncementGetUrgentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAnnouncementGetUrgentOK creates a AnnouncementGetUrgentOK with default headers values
func NewAnnouncementGetUrgentOK() *AnnouncementGetUrgentOK {
	return &AnnouncementGetUrgentOK{}
}

/*AnnouncementGetUrgentOK handles this case with default header values.

Request was successful
*/
type AnnouncementGetUrgentOK struct {
	Payload []*models.Announcement
}

func (o *AnnouncementGetUrgentOK) Error() string {
	return fmt.Sprintf("[GET /announcement/urgent][%d] announcementGetUrgentOK  %+v", 200, o.Payload)
}

func (o *AnnouncementGetUrgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnnouncementGetUrgentBadRequest creates a AnnouncementGetUrgentBadRequest with default headers values
func NewAnnouncementGetUrgentBadRequest() *AnnouncementGetUrgentBadRequest {
	return &AnnouncementGetUrgentBadRequest{}
}

/*AnnouncementGetUrgentBadRequest handles this case with default header values.

Parameter Error
*/
type AnnouncementGetUrgentBadRequest struct {
	Payload *models.Error
}

func (o *AnnouncementGetUrgentBadRequest) Error() string {
	return fmt.Sprintf("[GET /announcement/urgent][%d] announcementGetUrgentBadRequest  %+v", 400, *o.Payload)
}

func (o *AnnouncementGetUrgentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnnouncementGetUrgentUnauthorized creates a AnnouncementGetUrgentUnauthorized with default headers values
func NewAnnouncementGetUrgentUnauthorized() *AnnouncementGetUrgentUnauthorized {
	return &AnnouncementGetUrgentUnauthorized{}
}

/*AnnouncementGetUrgentUnauthorized handles this case with default header values.

Unauthorized
*/
type AnnouncementGetUrgentUnauthorized struct {
	Payload *models.Error
}

func (o *AnnouncementGetUrgentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /announcement/urgent][%d] announcementGetUrgentUnauthorized  %+v", 401, o.Payload)
}

func (o *AnnouncementGetUrgentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnnouncementGetUrgentNotFound creates a AnnouncementGetUrgentNotFound with default headers values
func NewAnnouncementGetUrgentNotFound() *AnnouncementGetUrgentNotFound {
	return &AnnouncementGetUrgentNotFound{}
}

/*AnnouncementGetUrgentNotFound handles this case with default header values.

Not Found
*/
type AnnouncementGetUrgentNotFound struct {
	Payload *models.Error
}

func (o *AnnouncementGetUrgentNotFound) Error() string {
	return fmt.Sprintf("[GET /announcement/urgent][%d] announcementGetUrgentNotFound  %+v", 404, o.Payload)
}

func (o *AnnouncementGetUrgentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
