// Code generated by go-swagger; DO NOT EDIT.

package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/frankrap/bitmexwrap/bitmex/models"
)

// InsuranceGetReader is a Reader for the InsuranceGet structure.
type InsuranceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsuranceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInsuranceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewInsuranceGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewInsuranceGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewInsuranceGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInsuranceGetOK creates a InsuranceGetOK with default headers values
func NewInsuranceGetOK() *InsuranceGetOK {
	return &InsuranceGetOK{}
}

/*InsuranceGetOK handles this case with default header values.

Request was successful
*/
type InsuranceGetOK struct {
	Payload []*models.Insurance
}

func (o *InsuranceGetOK) Error() string {
	return fmt.Sprintf("[GET /insurance][%d] insuranceGetOK  %+v", 200, o.Payload)
}

func (o *InsuranceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceGetBadRequest creates a InsuranceGetBadRequest with default headers values
func NewInsuranceGetBadRequest() *InsuranceGetBadRequest {
	return &InsuranceGetBadRequest{}
}

/*InsuranceGetBadRequest handles this case with default header values.

Parameter Error
*/
type InsuranceGetBadRequest struct {
	Payload *models.Error
}

func (o *InsuranceGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /insurance][%d] insuranceGetBadRequest  %+v", 400, *o.Payload)
}

func (o *InsuranceGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceGetUnauthorized creates a InsuranceGetUnauthorized with default headers values
func NewInsuranceGetUnauthorized() *InsuranceGetUnauthorized {
	return &InsuranceGetUnauthorized{}
}

/*InsuranceGetUnauthorized handles this case with default header values.

Unauthorized
*/
type InsuranceGetUnauthorized struct {
	Payload *models.Error
}

func (o *InsuranceGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /insurance][%d] insuranceGetUnauthorized  %+v", 401, o.Payload)
}

func (o *InsuranceGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceGetNotFound creates a InsuranceGetNotFound with default headers values
func NewInsuranceGetNotFound() *InsuranceGetNotFound {
	return &InsuranceGetNotFound{}
}

/*InsuranceGetNotFound handles this case with default header values.

Not Found
*/
type InsuranceGetNotFound struct {
	Payload *models.Error
}

func (o *InsuranceGetNotFound) Error() string {
	return fmt.Sprintf("[GET /insurance][%d] insuranceGetNotFound  %+v", 404, o.Payload)
}

func (o *InsuranceGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
