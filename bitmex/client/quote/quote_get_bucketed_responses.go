// Code generated by go-swagger; DO NOT EDIT.

package quote

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/frankrap/bitmexwrap/bitmex/models"
)

// QuoteGetBucketedReader is a Reader for the QuoteGetBucketed structure.
type QuoteGetBucketedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuoteGetBucketedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQuoteGetBucketedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewQuoteGetBucketedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewQuoteGetBucketedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewQuoteGetBucketedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQuoteGetBucketedOK creates a QuoteGetBucketedOK with default headers values
func NewQuoteGetBucketedOK() *QuoteGetBucketedOK {
	return &QuoteGetBucketedOK{}
}

/*QuoteGetBucketedOK handles this case with default header values.

Request was successful
*/
type QuoteGetBucketedOK struct {
	Payload []*models.Quote
}

func (o *QuoteGetBucketedOK) Error() string {
	return fmt.Sprintf("[GET /quote/bucketed][%d] quoteGetBucketedOK  %+v", 200, o.Payload)
}

func (o *QuoteGetBucketedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteGetBucketedBadRequest creates a QuoteGetBucketedBadRequest with default headers values
func NewQuoteGetBucketedBadRequest() *QuoteGetBucketedBadRequest {
	return &QuoteGetBucketedBadRequest{}
}

/*QuoteGetBucketedBadRequest handles this case with default header values.

Parameter Error
*/
type QuoteGetBucketedBadRequest struct {
	Payload *models.Error
}

func (o *QuoteGetBucketedBadRequest) Error() string {
	return fmt.Sprintf("[GET /quote/bucketed][%d] quoteGetBucketedBadRequest  %+v", 400, *o.Payload)
}

func (o *QuoteGetBucketedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteGetBucketedUnauthorized creates a QuoteGetBucketedUnauthorized with default headers values
func NewQuoteGetBucketedUnauthorized() *QuoteGetBucketedUnauthorized {
	return &QuoteGetBucketedUnauthorized{}
}

/*QuoteGetBucketedUnauthorized handles this case with default header values.

Unauthorized
*/
type QuoteGetBucketedUnauthorized struct {
	Payload *models.Error
}

func (o *QuoteGetBucketedUnauthorized) Error() string {
	return fmt.Sprintf("[GET /quote/bucketed][%d] quoteGetBucketedUnauthorized  %+v", 401, o.Payload)
}

func (o *QuoteGetBucketedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteGetBucketedNotFound creates a QuoteGetBucketedNotFound with default headers values
func NewQuoteGetBucketedNotFound() *QuoteGetBucketedNotFound {
	return &QuoteGetBucketedNotFound{}
}

/*QuoteGetBucketedNotFound handles this case with default header values.

Not Found
*/
type QuoteGetBucketedNotFound struct {
	Payload *models.Error
}

func (o *QuoteGetBucketedNotFound) Error() string {
	return fmt.Sprintf("[GET /quote/bucketed][%d] quoteGetBucketedNotFound  %+v", 404, o.Payload)
}

func (o *QuoteGetBucketedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
